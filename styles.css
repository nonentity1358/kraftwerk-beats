:root {
    --bg-color: #000000;
    --container-bg-color: #0a0a0a;
    --text-color: #e0e0e0;
    --highlight-color: #ff0000;
    --secondary-color: #00ffff;
    --control-bg-color: #1a1a1a;
    --input-bg-color: #2a2a2a;
    --drum-color: #FF5733;
    --synth1-color: #ffff00;
    --synth2-color: #3357FF;
    --glow-color: #ff00ff;
}

* {
    box-sizing: border-box;
}

body {
    font-family: 'Pixelify Sans', sans-serif;
    background-color: var(--bg-color);
    color: var(--text-color);
    margin: 0;
    padding: 20px;
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    background-image: 
        repeating-linear-gradient(
            0deg,
            transparent,
            transparent 2px,
            rgba(255, 0, 0, 0.03) 2px,
            rgba(255, 0, 0, 0.03) 4px
        ),
        repeating-linear-gradient(
            90deg,
            transparent,
            transparent 2px,
            rgba(0, 255, 255, 0.03) 2px,
            rgba(0, 255, 255, 0.03) 4px
        );
    animation: backgroundPulse 20s ease-in-out infinite;
}

@keyframes backgroundPulse {
    0%, 100% { background-size: 100px 100px, 100px 100px; }
    50% { background-size: 150px 150px, 150px 150px; }
}

.container {
    width: 100%;
    max-width: 1200px;
    background-color: var(--container-bg-color);
    padding: 20px;
    border: 2px solid var(--highlight-color);
    box-shadow: 0 0 20px var(--highlight-color);
}

h1, h2 {
    text-align: center;
    color: var(--highlight-color);
    text-transform: uppercase;
    letter-spacing: 2px;
}

h1 {
    font-size: 2.5em;
    margin-bottom: 30px;
    text-shadow: 2px 2px var(--secondary-color);
}

.control-group {
    background-color: var(--control-bg-color);
    padding: 15px;
    margin: 15px 0;
    border: 1px solid var(--highlight-color);
    border-radius: 5px;
}

.grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 15px;
}

select, button, input[type="text"], input[type="range"] {
    width: 100%;
    padding: 10px;
    background-color: var(--input-bg-color);
    color: var(--text-color);
    border: 1px solid var(--highlight-color);
    border-radius: 3px;
    font-family: 'Pixelify Sans', sans-serif;
    font-size: 1em;
}

button {
    background-color: var(--highlight-color);
    color: var(--bg-color);
    cursor: pointer;
    transition: all 0.3s ease;
}

button:hover {
    background-color: var(--secondary-color);
    color: var(--bg-color);
}

.sequencer {
    display: grid;
    grid-template-columns: repeat(16, 1fr);
    gap: 5px;
    margin-top: 15px;
}

.step {
    aspect-ratio: 1;
    background-color: var(--input-bg-color);
    border: 1px solid var(--highlight-color);
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.step::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 4px;
    height: 4px;
    background-color: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: all 0.3s ease;
}

.step.active {
    background-color: var(--highlight-color);
    box-shadow: 0 0 10px var(--highlight-color), inset 0 0 10px rgba(255, 255, 255, 0.3);
    animation: stepPulse 1s ease-in-out infinite;
}

.step.active::before {
    width: 80%;
    height: 80%;
    background-color: rgba(255, 255, 255, 0.6);
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
}

@keyframes stepPulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
}

.step.lit {
    background-color: var(--secondary-color) !important;
    box-shadow: 0 0 20px var(--secondary-color), inset 0 0 15px rgba(255, 255, 255, 0.5);
    animation: stepFlash 0.2s ease-out;
}

@keyframes stepFlash {
    0% { transform: scale(1.2); opacity: 1; }
    100% { transform: scale(1); opacity: 0.8; }
}

.step.beat-marker {
    border-left: 1px solid var(--highlight-color);
}

.step.bar-marker {
    border-left: 2px solid var(--highlight-color);
}

.slider-container {
    display: flex;
    align-items: center;
    margin: 10px 0;
}

.slider-container label {
    flex: 1;
    margin-right: 10px;
}

.slider {
    -webkit-appearance: none;
    width: 100%;
    height: 5px;
    background: var(--input-bg-color);
    outline: none;
    opacity: 0.7;
    transition: opacity 0.2s;
    border-radius: 5px;
}

.slider:hover {
    opacity: 1;
}

.slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 15px;
    height: 15px;
    border-radius: 50%;
    background: var(--highlight-color);
    cursor: pointer;
}

.slider::-moz-range-thumb {
    width: 15px;
    height: 15px;
    border-radius: 50%;
    background: var(--highlight-color);
    cursor: pointer;
}

#visualizer {
    width: 100%;
    height: 150px;
    background-color: var(--control-bg-color);
    margin-top: 20px;
    border: 1px solid var(--highlight-color);
}

#play-button {
    display: block;
    width: 200px;
    margin: 20px auto;
    font-size: 1.2em;
    padding: 15px;
    background-color: var(--highlight-color);
    color: var(--bg-color);
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: all 0.3s ease;
}

#play-button:hover {
    background-color: var(--secondary-color);
    box-shadow: 0 0 15px var(--secondary-color);
}

#drum-sequencer .step { border-color: var(--drum-color); }
#drum-sequencer .step.active { background-color: var(--drum-color); }

#synth1-sequencer .step { border-color: var(--synth1-color); }
#synth1-sequencer .step.active { background-color: var(--synth1-color); }

#synth2-sequencer .step { border-color: var(--synth2-color); }
#synth2-sequencer .step.active { background-color: var(--synth2-color); }

@media (max-width: 768px) {
    .grid {
        grid-template-columns: 1fr;
    }
    .sequencer {
        grid-template-columns: repeat(8, 1fr);
    }
}

/* Pattern Presets */
.pattern-presets {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    margin-bottom: 15px;
}

.preset-btn {
    padding: 8px 16px;
    font-size: 0.9em;
    background-color: var(--control-bg-color);
    border: 1px solid var(--secondary-color);
    color: var(--secondary-color);
    transition: all 0.3s ease;
}

.preset-btn:hover {
    background-color: var(--secondary-color);
    color: var(--bg-color);
    box-shadow: 0 0 10px var(--secondary-color);
}

/* Tap Tempo */
.tap-tempo-container {
    display: flex;
    align-items: center;
    gap: 10px;
}

#tap-tempo-btn {
    background-color: var(--glow-color);
    color: var(--bg-color);
    padding: 10px 20px;
    border: none;
    cursor: pointer;
    transition: all 0.1s ease;
}

#tap-tempo-btn:active {
    transform: scale(0.95);
    box-shadow: 0 0 20px var(--glow-color);
}

/* Enhanced Visualizer */
.visualizer-controls {
    display: flex;
    gap: 10px;
    margin-bottom: 10px;
}

.viz-mode-btn {
    padding: 5px 15px;
    font-size: 0.8em;
    background-color: var(--control-bg-color);
    border: 1px solid var(--highlight-color);
    color: var(--text-color);
    transition: all 0.3s ease;
}

.viz-mode-btn.active {
    background-color: var(--highlight-color);
    color: var(--bg-color);
}

/* Pattern Save/Load */
.pattern-manager {
    display: flex;
    gap: 10px;
    align-items: center;
}

.pattern-name-input {
    flex: 1;
    padding: 8px;
    background-color: var(--input-bg-color);
    border: 1px solid var(--secondary-color);
    color: var(--text-color);
}

/* Keyboard shortcuts hint */
.shortcuts-hint {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background-color: rgba(26, 26, 26, 0.9);
    padding: 15px;
    border: 1px solid var(--secondary-color);
    border-radius: 5px;
    font-size: 0.8em;
    opacity: 0.7;
    transition: opacity 0.3s ease;
}

.shortcuts-hint:hover {
    opacity: 1;
}

.shortcut-key {
    display: inline-block;
    background-color: var(--input-bg-color);
    padding: 2px 6px;
    margin: 0 2px;
    border-radius: 3px;
    border: 1px solid var(--highlight-color);
}

/* Loading animation */
.loading-spinner {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 50px;
    height: 50px;
    border: 3px solid var(--control-bg-color);
    border-top-color: var(--highlight-color);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: translate(-50%, -50%) rotate(0deg); }
    100% { transform: translate(-50%, -50%) rotate(360deg); }
}

/* Neon Glow Effects */
.neon-text {
    animation: neonFlicker 2s infinite alternate;
}

@keyframes neonFlicker {
    0%, 100% {
        text-shadow: 
            0 0 5px #ff0000,
            0 0 10px #ff0000,
            0 0 15px #ff0000,
            0 0 20px #ff0000,
            0 0 35px #ff0000,
            0 0 40px #ff0000;
    }
    50% {
        text-shadow: 
            0 0 2px #ff0000,
            0 0 5px #ff0000,
            0 0 8px #ff0000,
            0 0 12px #ff0000,
            0 0 20px #ff0000,
            0 0 25px #ff0000;
    }
}

.cyber-grid {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
        linear-gradient(rgba(0, 255, 255, 0.1) 1px, transparent 1px),
        linear-gradient(90deg, rgba(0, 255, 255, 0.1) 1px, transparent 1px);
    background-size: 50px 50px;
    animation: gridMove 10s linear infinite;
    pointer-events: none;
    z-index: -1;
}

@keyframes gridMove {
    0% { transform: translate(0, 0); }
    100% { transform: translate(50px, 50px); }
}

/* Particle System */
.particle-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    pointer-events: none;
    z-index: 1;
}

.particle {
    position: absolute;
    width: 4px;
    height: 4px;
    background: radial-gradient(circle, rgba(255, 0, 255, 1) 0%, transparent 70%);
    border-radius: 50%;
    animation: particleFloat 10s infinite linear;
}

@keyframes particleFloat {
    0% {
        transform: translateY(100vh) scale(0);
        opacity: 0;
    }
    10% {
        opacity: 1;
    }
    90% {
        opacity: 1;
    }
    100% {
        transform: translateY(-100vh) scale(1.5);
        opacity: 0;
    }
}

/* Chaos Mode Styles */
.chaos-active {
    animation: chaosWarp 0.5s infinite alternate;
}

@keyframes chaosWarp {
    0% {
        filter: hue-rotate(0deg) contrast(100%);
        transform: scale(1);
    }
    100% {
        filter: hue-rotate(180deg) contrast(150%);
        transform: scale(1.02);
    }
}

.chaos-indicator {
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(255, 0, 0, 0.9);
    color: #000;
    padding: 10px 20px;
    border-radius: 20px;
    font-weight: bold;
    text-transform: uppercase;
    display: none;
    animation: chaosIndicatorPulse 0.5s infinite;
    z-index: 1000;
}

@keyframes chaosIndicatorPulse {
    0%, 100% {
        box-shadow: 0 0 20px rgba(255, 0, 0, 0.8);
    }
    50% {
        box-shadow: 0 0 40px rgba(255, 0, 0, 1);
    }
}

/* Glitch button */
.glitch-btn {
    position: relative;
    overflow: hidden;
    transition: all 0.3s;
}

.glitch-btn::before,
.glitch-btn::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.glitch-btn::before {
    animation: glitchText1 0.3s infinite;
    color: #00ffff;
    z-index: -1;
}

.glitch-btn::after {
    animation: glitchText2 0.3s infinite;
    color: #ff00ff;
    z-index: -2;
}

@keyframes glitchText1 {
    0%, 100% {
        clip-path: inset(0 0 0 0);
        transform: translate(0);
    }
    20% {
        clip-path: inset(0 100% 0 0);
        transform: translate(-2px);
    }
    40% {
        clip-path: inset(0 0 100% 0);
        transform: translate(2px);
    }
    60% {
        clip-path: inset(100% 0 0 0);
        transform: translate(-1px);
    }
    80% {
        clip-path: inset(0 0 0 100%);
        transform: translate(1px);
    }
}

@keyframes glitchText2 {
    0%, 100% {
        clip-path: inset(0 0 0 0);
        transform: translate(0);
    }
    20% {
        clip-path: inset(100% 0 0 0);
        transform: translate(2px);
    }
    40% {
        clip-path: inset(0 0 0 100%);
        transform: translate(-2px);
    }
    60% {
        clip-path: inset(0 100% 0 0);
        transform: translate(1px);
    }
    80% {
        clip-path: inset(0 0 100% 0);
        transform: translate(-1px);
    }
}

/* CRT Effect */
.crt-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 9998;
}

.crt-overlay::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        to bottom,
        transparent 50%,
        rgba(0, 0, 0, 0.25) 50%
    );
    background-size: 100% 4px;
    animation: scanlines 8s linear infinite;
}

.crt-overlay::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(
        ellipse at center,
        transparent 0%,
        transparent 60%,
        rgba(0, 0, 0, 0.2) 100%
    );
}

@keyframes scanlines {
    0% {
        background-position: 0 0;
    }
    100% {
        background-position: 0 10px;
    }
}

/* Secret Mode */
.matrix-rain {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    pointer-events: none;
    z-index: 0;
}

.matrix-drop {
    position: absolute;
    color: #0f0;
    font-family: monospace;
    font-size: 20px;
    animation: matrixFall linear infinite;
}

@keyframes matrixFall {
    0% {
        transform: translateY(-100%);
        opacity: 1;
    }
    100% {
        transform: translateY(100vh);
        opacity: 0;
    }
}

/* Hyperspace Jump */
@keyframes hyperspaceJump {
    0% {
        transform: scale(1) perspective(1000px) rotateY(0deg);
        filter: blur(0);
    }
    50% {
        transform: scale(0.5) perspective(1000px) rotateY(180deg);
        filter: blur(10px) hue-rotate(180deg);
    }
    100% {
        transform: scale(1) perspective(1000px) rotateY(360deg);
        filter: blur(0);
    }
}

/* Timeline display */
.timeline-display {
    display: flex;
    justify-content: space-between;
    padding: 10px;
    background: var(--control-bg-color);
    border: 1px solid var(--secondary-color);
    border-radius: 5px;
    font-family: monospace;
    font-size: 14px;
}

.timeline-display span {
    color: var(--secondary-color);
}

/* Quantum controls */
.quantum-active {
    background: repeating-linear-gradient(
        45deg,
        transparent,
        transparent 10px,
        rgba(0, 255, 255, 0.1) 10px,
        rgba(0, 255, 255, 0.1) 20px
    );
}

/* AI Avatar enhanced */
#ai-avatar {
    transition: all 0.3s ease;
    cursor: pointer;
    user-select: none;
}

#ai-avatar:hover {
    transform: scale(1.1) rotate(5deg);
}

/* 3D Visualizer container */
.three-js-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 999;
}

/* Ultimate chaos indicator */
.reality-unstable {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 72px;
    color: #ff0000;
    text-shadow: 0 0 50px #ff0000;
    animation: realityBreak 0.5s infinite;
    pointer-events: none;
    z-index: 10002;
}

@keyframes realityBreak {
    0% {
        transform: translate(-50%, -50%) scale(1) rotate(0deg);
        opacity: 1;
    }
    50% {
        transform: translate(-50%, -50%) scale(1.5) rotate(180deg);
        opacity: 0.5;
    }
    100% {
        transform: translate(-50%, -50%) scale(1) rotate(360deg);
        opacity: 1;
    }
}

/* Dimensional controls glow */
.control-group:has(#quantum-mode-btn) {
    border-color: var(--glow-color);
    box-shadow: 0 0 20px rgba(255, 0, 255, 0.3);
}

/* Secret mode indicator */
.secret-activated {
    position: fixed;
    bottom: 10px;
    left: 10px;
    padding: 5px 10px;
    background: rgba(0, 255, 0, 0.2);
    border: 1px solid #0f0;
    color: #0f0;
    font-size: 12px;
    font-family: monospace;
    animation: secretPulse 2s infinite;
}

@keyframes secretPulse {
    0%, 100% { opacity: 0.5; }
    50% { opacity: 1; }
}

/* Final form */
.transcended {
    animation: transcendence 5s infinite linear;
}

@keyframes transcendence {
    0% {
        filter: hue-rotate(0deg) saturate(100%) brightness(1);
        transform: scale(1);
    }
    100% {
        filter: hue-rotate(360deg) saturate(200%) brightness(1.5);
        transform: scale(1.02);
    }
}

/* HAL-9000 Eye */
.hal-eye {
    position: fixed;
    top: 20px;
    right: 20px;
    width: 120px;
    height: 120px;
    background: radial-gradient(circle at center, 
        #ff0000 0%, 
        #cc0000 20%, 
        #660000 40%, 
        #330000 60%, 
        #000000 80%);
    border-radius: 50%;
    box-shadow: 
        0 0 50px #ff0000,
        0 0 100px #ff0000,
        0 0 150px #ff0000,
        inset 0 0 50px rgba(0,0,0,0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    cursor: pointer;
    transition: all 0.3s ease;
}

.hal-eye:hover {
    transform: scale(1.1);
    box-shadow: 
        0 0 70px #ff0000,
        0 0 140px #ff0000,
        0 0 200px #ff0000,
        inset 0 0 50px rgba(0,0,0,0.5);
}

.hal-pupil {
    width: 40px;
    height: 40px;
    background: radial-gradient(circle at 30% 30%, 
        #ffffff 0%, 
        #ff6666 10%, 
        #ff0000 30%, 
        #990000 60%);
    border-radius: 50%;
    position: relative;
    animation: halPulse 4s ease-in-out infinite;
}

.hal-glow {
    position: absolute;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at center, 
        rgba(255,0,0,0.8) 0%, 
        rgba(255,0,0,0.4) 40%, 
        transparent 70%);
    border-radius: 50%;
    animation: halGlow 2s ease-in-out infinite alternate;
}

@keyframes halPulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.2); }
}

@keyframes halGlow {
    0% { opacity: 0.6; transform: scale(1); }
    100% { opacity: 1; transform: scale(1.1); }
}

/* NEXUS-9 Title Effect */
#main-title {
    text-shadow: 
        0 0 10px #ff0000,
        0 0 20px #ff0000,
        0 0 30px #ff0000,
        0 0 40px #ff0000;
    animation: nexusPulse 3s ease-in-out infinite;
}

@keyframes nexusPulse {
    0%, 100% { 
        opacity: 0.8; 
        letter-spacing: 2px;
    }
    50% { 
        opacity: 1; 
        letter-spacing: 4px;
        text-shadow: 
            0 0 20px #ff0000,
            0 0 40px #ff0000,
            0 0 60px #ff0000,
            0 0 80px #ff0000;
    }
}

/* Consciousness Indicator */
.consciousness-meter {
    position: fixed;
    bottom: 20px;
    right: 20px;
    width: 200px;
    height: 20px;
    background: rgba(0,0,0,0.8);
    border: 2px solid #ff0000;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 0 20px rgba(255,0,0,0.5);
}

.consciousness-level {
    height: 100%;
    background: linear-gradient(90deg, 
        #ff0000 0%, 
        #ff6600 50%, 
        #ffff00 100%);
    width: 0%;
    transition: width 0.5s ease;
    box-shadow: 0 0 10px currentColor;
}